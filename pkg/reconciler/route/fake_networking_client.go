// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/google/kf/v2/pkg/client/networking/clientset/versioned (interfaces: Interface)

// Package route is a generated GoMock package.
package route

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	v1alpha3 "github.com/google/kf/v2/pkg/client/networking/clientset/versioned/typed/networking/v1alpha3"
	discovery "k8s.io/client-go/discovery"
)

// FakeNetworkingClient is a mock of Interface interface.
type FakeNetworkingClient struct {
	ctrl     *gomock.Controller
	recorder *FakeNetworkingClientMockRecorder
}

// FakeNetworkingClientMockRecorder is the mock recorder for FakeNetworkingClient.
type FakeNetworkingClientMockRecorder struct {
	mock *FakeNetworkingClient
}

// NewFakeNetworkingClient creates a new mock instance.
func NewFakeNetworkingClient(ctrl *gomock.Controller) *FakeNetworkingClient {
	mock := &FakeNetworkingClient{ctrl: ctrl}
	mock.recorder = &FakeNetworkingClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *FakeNetworkingClient) EXPECT() *FakeNetworkingClientMockRecorder {
	return m.recorder
}

// Discovery mocks base method.
func (m *FakeNetworkingClient) Discovery() discovery.DiscoveryInterface {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Discovery")
	ret0, _ := ret[0].(discovery.DiscoveryInterface)
	return ret0
}

// Discovery indicates an expected call of Discovery.
func (mr *FakeNetworkingClientMockRecorder) Discovery() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Discovery", reflect.TypeOf((*FakeNetworkingClient)(nil).Discovery))
}

// NetworkingV1alpha3 mocks base method.
func (m *FakeNetworkingClient) NetworkingV1alpha3() v1alpha3.NetworkingV1alpha3Interface {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NetworkingV1alpha3")
	ret0, _ := ret[0].(v1alpha3.NetworkingV1alpha3Interface)
	return ret0
}

// NetworkingV1alpha3 indicates an expected call of NetworkingV1alpha3.
func (mr *FakeNetworkingClientMockRecorder) NetworkingV1alpha3() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NetworkingV1alpha3", reflect.TypeOf((*FakeNetworkingClient)(nil).NetworkingV1alpha3))
}
