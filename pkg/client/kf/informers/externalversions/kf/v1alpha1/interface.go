// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by informer-gen. DO NOT EDIT.

package v1alpha1

import (
	internalinterfaces "github.com/google/kf/v2/pkg/client/kf/informers/externalversions/internalinterfaces"
)

// Interface provides access to all the informers in this group version.
type Interface interface {
	// Apps returns a AppInformer.
	Apps() AppInformer
	// Builds returns a BuildInformer.
	Builds() BuildInformer
	// ClusterServiceBrokers returns a ClusterServiceBrokerInformer.
	ClusterServiceBrokers() ClusterServiceBrokerInformer
	// Routes returns a RouteInformer.
	Routes() RouteInformer
	// Scales returns a ScaleInformer.
	Scales() ScaleInformer
	// ServiceBrokers returns a ServiceBrokerInformer.
	ServiceBrokers() ServiceBrokerInformer
	// ServiceInstances returns a ServiceInstanceInformer.
	ServiceInstances() ServiceInstanceInformer
	// ServiceInstanceBindings returns a ServiceInstanceBindingInformer.
	ServiceInstanceBindings() ServiceInstanceBindingInformer
	// SourcePackages returns a SourcePackageInformer.
	SourcePackages() SourcePackageInformer
	// Spaces returns a SpaceInformer.
	Spaces() SpaceInformer
	// Tasks returns a TaskInformer.
	Tasks() TaskInformer
	// TaskSchedules returns a TaskScheduleInformer.
	TaskSchedules() TaskScheduleInformer
}

type version struct {
	factory          internalinterfaces.SharedInformerFactory
	namespace        string
	tweakListOptions internalinterfaces.TweakListOptionsFunc
}

// New returns a new Interface.
func New(f internalinterfaces.SharedInformerFactory, namespace string, tweakListOptions internalinterfaces.TweakListOptionsFunc) Interface {
	return &version{factory: f, namespace: namespace, tweakListOptions: tweakListOptions}
}

// Apps returns a AppInformer.
func (v *version) Apps() AppInformer {
	return &appInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// Builds returns a BuildInformer.
func (v *version) Builds() BuildInformer {
	return &buildInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// ClusterServiceBrokers returns a ClusterServiceBrokerInformer.
func (v *version) ClusterServiceBrokers() ClusterServiceBrokerInformer {
	return &clusterServiceBrokerInformer{factory: v.factory, tweakListOptions: v.tweakListOptions}
}

// Routes returns a RouteInformer.
func (v *version) Routes() RouteInformer {
	return &routeInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// Scales returns a ScaleInformer.
func (v *version) Scales() ScaleInformer {
	return &scaleInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// ServiceBrokers returns a ServiceBrokerInformer.
func (v *version) ServiceBrokers() ServiceBrokerInformer {
	return &serviceBrokerInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// ServiceInstances returns a ServiceInstanceInformer.
func (v *version) ServiceInstances() ServiceInstanceInformer {
	return &serviceInstanceInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// ServiceInstanceBindings returns a ServiceInstanceBindingInformer.
func (v *version) ServiceInstanceBindings() ServiceInstanceBindingInformer {
	return &serviceInstanceBindingInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// SourcePackages returns a SourcePackageInformer.
func (v *version) SourcePackages() SourcePackageInformer {
	return &sourcePackageInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// Spaces returns a SpaceInformer.
func (v *version) Spaces() SpaceInformer {
	return &spaceInformer{factory: v.factory, tweakListOptions: v.tweakListOptions}
}

// Tasks returns a TaskInformer.
func (v *version) Tasks() TaskInformer {
	return &taskInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// TaskSchedules returns a TaskScheduleInformer.
func (v *version) TaskSchedules() TaskScheduleInformer {
	return &taskScheduleInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}
