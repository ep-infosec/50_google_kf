// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/google/kf/v2/pkg/kf/testutil/integration (interfaces: MetricLogger)

// Package integration is a generated GoMock package.
package integration

import (
	context "context"
	reflect "reflect"

	logging "cloud.google.com/go/logging"
	gomock "github.com/golang/mock/gomock"
)

// FakeMetricLogger is a mock of MetricLogger interface.
type FakeMetricLogger struct {
	ctrl     *gomock.Controller
	recorder *FakeMetricLoggerMockRecorder
}

// FakeMetricLoggerMockRecorder is the mock recorder for FakeMetricLogger.
type FakeMetricLoggerMockRecorder struct {
	mock *FakeMetricLogger
}

// NewFakeMetricLogger creates a new mock instance.
func NewFakeMetricLogger(ctrl *gomock.Controller) *FakeMetricLogger {
	mock := &FakeMetricLogger{ctrl: ctrl}
	mock.recorder = &FakeMetricLoggerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *FakeMetricLogger) EXPECT() *FakeMetricLoggerMockRecorder {
	return m.recorder
}

// LogSync mocks base method.
func (m *FakeMetricLogger) LogSync(arg0 context.Context, arg1 logging.Entry) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "LogSync", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// LogSync indicates an expected call of LogSync.
func (mr *FakeMetricLoggerMockRecorder) LogSync(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "LogSync", reflect.TypeOf((*FakeMetricLogger)(nil).LogSync), arg0, arg1)
}
