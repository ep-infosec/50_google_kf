# Copyright 2022 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    operator.knative.dev/mode: Reconcile
  labels:
    kf.dev/release: VERSION_PLACEHOLDER
  name: sourcepackages.kf.dev
spec:
  group: kf.dev
  names:
    kind: SourcePackage
    plural: sourcepackages
    singular: sourcepackage
    categories:
      - all
      - kf
  scope: Namespaced
  versions:
    - name: v1alpha1
      served: true
      storage: true
      subresources:
        status: {}
      schema:
        openAPIV3Schema:
          description: SourcePackage is responsible for storing the metadata about the source code bits.
          type: object
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: SourcePackageSpec is the desired configuration for a SourcePackage.
              type: object
              properties:
                checksum:
                  description: Checksum has the checksum information.
                  type: object
                  properties:
                    type:
                      description: 'Type is the type of checksum used. The allowed values are (more might be added in the future): * sha256'
                      type: string
                    value:
                      description: Value is the hex encoded checksum of the package bits.
                      type: string
                size:
                  description: Size has the number of bytes of the package.
                  type: integer
                  format: int64
            status:
              description: SourcePackageStatus is the current configuration and running state for a SourcePackage.
              type: object
              properties:
                annotations:
                  description: Annotations is additional Status fields for the Resource to save some additional State as well as convey more information to the user. This is roughly akin to Annotations on any k8s resource, just the reconciler conveying richer information outwards.
                  type: object
                  additionalProperties:
                    type: string
                checksum:
                  description: Checksum has the checksum information.
                  type: object
                  properties:
                    type:
                      description: 'Type is the type of checksum used. The allowed values are (more might be added in the future): * sha256'
                      type: string
                    value:
                      description: Value is the hex encoded checksum of the package bits.
                      type: string
                conditions:
                  description: Conditions the latest available observations of a resource's current state.
                  type: array
                  items:
                    description: 'Conditions defines a readiness condition for a Knative resource. See: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties'
                    type: object
                    required:
                      - status
                      - type
                    properties:
                      lastTransitionTime:
                        description: LastTransitionTime is the last time the condition transitioned from one status to another. We use VolatileTime in place of metav1.Time to exclude this from creating equality.Semantic differences (all other things held constant).
                        type: string
                        format: date-time
                      message:
                        description: A human readable message indicating details about the transition.
                        type: string
                      reason:
                        description: The reason for the condition's last transition.
                        type: string
                      severity:
                        description: Severity with which to treat failures of this type of condition. When this is not specified, it defaults to Error.
                        type: string
                      status:
                        description: Status of the condition, one of True, False, Unknown.
                        type: string
                      type:
                        description: Type of condition.
                        type: string
                image:
                  description: Image is the fully qualified image name that has stored the underlying data.
                  type: string
                observedGeneration:
                  description: ObservedGeneration is the 'Generation' of the Service that was last processed by the controller.
                  type: integer
                  format: int64
                size:
                  description: Size has the number of bytes of the package.
                  type: integer
                  format: int64
      additionalPrinterColumns:
        - name: Image
          type: string
          jsonPath: .status.image
        - name: Size
          type: integer
          jsonPath: .status.size
        - name: Succeeded
          type: string
          jsonPath: .status.conditions[?(@.type=="Succeeded")].status
        - name: Reason
          type: string
          jsonPath: ".status.conditions[?(@.type=='Succeeded')].reason"
