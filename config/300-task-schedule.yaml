# Copyright 2022 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    operator.knative.dev/mode: Reconcile
  labels:
    kf.dev/release: VERSION_PLACEHOLDER
  name: taskschedules.kf.dev
spec:
  group: kf.dev
  names:
    kind: TaskSchedule
    plural: taskschedules
    singular: taskschedule
    categories:
      - all
      - kf
  scope: Namespaced
  versions:
    - name: v1alpha1
      served: true
      storage: true
      subresources:
        status: {}
      schema:
        openAPIV3Schema:
          description: TaskSchedule is a configuration to create Tasks on a cron schedule.
          type: object
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: TaskScheduleSpec contains the specification of a TaskSchedule.
              type: object
              properties:
                concurrencyPolicy:
                  description: "ConcurrencyPolicy specifies how to treat concurrent executions of Tasks. Valid values are \n - \"Allow\" (default): allows CronJobs to run concurrently; - \"Forbid\": forbids concurrent runs, skipping next run if previous run \t\thasn't finished yet; - \"Replace\": cancels currently running job and replaces it with a new one."
                  type: string
                schedule:
                  description: Schedule is the interval to start Tasks in Cron format, see https://en.wikipedia.org/wiki/Cron.
                  type: string
                suspend:
                  description: Suspend tells the controller to suspend subsequent executions. It does not apply to already started executions.
                  type: boolean
                taskTemplate:
                  description: TaskTemplate specifies the Task that will be created when executing a TaskSchedule.
                  type: object
                  properties:
                    appRef:
                      description: AppRef is to reference the App the task is created on.
                      type: object
                      properties:
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                          type: string
                    command:
                      description: Command is the start command to be set for the Task.
                      type: string
                    cpu:
                      description: CPU is the number of cpu core to request for the Task, e.g. "1", "500m" or "0.5".
                      type: string
                    disk:
                      description: Disk is the number of ephermeral storage units to request for the Task, e.g. "1G", "2Gi".
                      type: string
                    displayName:
                      description: DisplayName of the Task, it is either user-provided or auto generated.
                      type: string
                    memory:
                      description: Memory is the number of memory units to request for the Task, e.g. "1G", "2Gi".
                      type: string
                    terminated:
                      description: Terminated determines if the Task should have been terminated or not.
                      type: boolean
            status:
              description: TaskScheduleStatus represents information about the status of a TaskSchedule.
              type: object
              properties:
                active:
                  description: Active is a list of currently running Tasks created via this TaskSchedule.
                  type: array
                  items:
                    description: LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
                    type: object
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                annotations:
                  description: Annotations is additional Status fields for the Resource to save some additional State as well as convey more information to the user. This is roughly akin to Annotations on any k8s resource, just the reconciler conveying richer information outwards.
                  type: object
                  additionalProperties:
                    type: string
                conditions:
                  description: Conditions the latest available observations of a resource's current state.
                  type: array
                  items:
                    description: 'Conditions defines a readiness condition for a Knative resource. See: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties'
                    type: object
                    required:
                      - status
                      - type
                    properties:
                      lastTransitionTime:
                        description: LastTransitionTime is the last time the condition transitioned from one status to another. We use VolatileTime in place of metav1.Time to exclude this from creating equality.Semantic differences (all other things held constant).
                        type: string
                        format: date-time
                      message:
                        description: A human readable message indicating details about the transition.
                        type: string
                      reason:
                        description: The reason for the condition's last transition.
                        type: string
                      severity:
                        description: Severity with which to treat failures of this type of condition. When this is not specified, it defaults to Error.
                        type: string
                      status:
                        description: Status of the condition, one of True, False, Unknown.
                        type: string
                      type:
                        description: Type of condition.
                        type: string
                lastScheduleTime:
                  description: LastScheduleTime is the timestamp of when a Task was last scheduled.
                  type: string
                  format: date-time
                observedGeneration:
                  description: ObservedGeneration is the 'Generation' of the Service that was last processed by the controller.
                  type: integer
                  format: int64
      additionalPrinterColumns:
        - name: Schedule
          type: string
          jsonPath: .spec.schedule
        - name: Suspend
          type: boolean
          jsonPath: .spec.suspend
        - name: LastSchedule
          type: date
          jsonPath: .status.lastScheduleTime
        - name: ConcurrencyPolicy
          type: string
          jsonPath: .spec.concurrencyPolicy
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
        - name: Ready
          type: string
          jsonPath: .status.conditions[?(@.type=="Ready")].status
        - name: Reason
          type: string
          jsonPath: ".status.conditions[?(@.type=='Ready')].reason"
