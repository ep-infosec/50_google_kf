# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the License);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an AS IS BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    operator.knative.dev/mode: Reconcile
  labels:
    kf.dev/release: VERSION_PLACEHOLDER
  name: serviceinstancebindings.kf.dev
spec:
  group: kf.dev
  names:
    kind: ServiceInstanceBinding
    plural: serviceinstancebindings
    singular: serviceinstancebinding
    categories:
      - all
      - kf
  scope: Namespaced
  versions:
    - name: v1alpha1
      served: true
      storage: true
      subresources:
        status: {}
      schema:
        openAPIV3Schema:
          description: ServiceInstanceBinding is an abstraction for a service binding between any type of ServiceInstance and an App.
          type: object
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: ServiceInstanceBindingSpec contains the specification for a binding.
              type: object
              required:
                - instanceRef
              properties:
                app:
                  description: App is the Kf App that the service instance is bound to.
                  type: object
                  properties:
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                      type: string
                bindingNameOverride:
                  description: BindingNameOverride is the custom binding name set by the user. If it is not set, the name of the service instance is used.
                  type: string
                instanceRef:
                  description: InstanceRef is the service instance that is bound to the App or Route.
                  type: object
                  properties:
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                      type: string
                parametersFrom:
                  description: ParametersFrom contains a reference to a secret containing parameters for the service instance binding.
                  type: object
                  properties:
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                      type: string
                progressDeadlineSeconds:
                  description: ProgressDeadlineSeconds contains a configurable timeout between state transition and reaching a stable state before binding or unbinding times out.
                  type: integer
                  format: int64
                unbindRequests:
                  description: UnbindRequests is a unique identifier, updating will trigger an additional unbind retry.
                  type: integer
                route:
                  description: Route is the Route that the service instance is bound to.
                  type: object
                  properties:
                    domain:
                      description: Domain is the domain of the route (e.g, in hostname.example.com it would be example.com).
                      type: string
                    hostname:
                      description: Hostname is the hostname or subdomain of the route (e.g, in hostname.example.com it would be hostname).
                      type: string
                    path:
                      description: Path is the URL path of the route.
                      type: string
            status:
              description: ServiceInstanceBindingStatus represents information about the status of a Binding.
              type: object
              required:
                - tags
              properties:
                annotations:
                  description: Annotations is additional Status fields for the Resource to save some additional State as well as convey more information to the user. This is roughly akin to Annotations on any k8s resource, just the reconciler conveying richer information outwards.
                  type: object
                  additionalProperties:
                    type: string
                bindingName:
                  description: BindingName is the custom binding name set by the user, or the name of the service instance if a custom name was not provided.
                  type: string
                className:
                  description: ClassName contains the human-readable name of the class
                  type: string
                conditions:
                  description: Conditions the latest available observations of a resource's current state.
                  type: array
                  items:
                    description: 'Conditions defines a readiness condition for a Knative resource. See: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties'
                    type: object
                    required:
                      - status
                      - type
                    properties:
                      lastTransitionTime:
                        description: LastTransitionTime is the last time the condition transitioned from one status to another. We use VolatileTime in place of metav1.Time to exclude this from creating equality.Semantic differences (all other things held constant).
                        type: string
                        format: date-time
                      message:
                        description: A human readable message indicating details about the transition.
                        type: string
                      reason:
                        description: The reason for the condition's last transition.
                        type: string
                      severity:
                        description: Severity with which to treat failures of this type of condition. When this is not specified, it defaults to Error.
                        type: string
                      status:
                        description: Status of the condition, one of True, False, Unknown.
                        type: string
                      type:
                        description: Type of condition.
                        type: string
                credentialsSecretRef:
                  description: CredentialsSecretRef is the K8s secret name that stores the credentials for the service binding.
                  type: object
                  properties:
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                      type: string
                observedGeneration:
                  description: ObservedGeneration is the 'Generation' of the Service that was last processed by the controller.
                  type: integer
                  format: int64
                osbStatus:
                  description: OSBStatus contains information about the lifecycle of the OSB backed service.
                  type: object
                  properties:
                    bindFailed:
                      description: OSBState contains information about a specific state.
                      type: object
                      properties:
                        operationKey:
                          description: OperationKey, if specified, holds the long running operation key for a given state. OSB uses this arbitrary value to reference specific back-end tasks it's performing.
                          type: string
                    binding:
                      description: OSBState contains information about a specific state.
                      type: object
                      properties:
                        operationKey:
                          description: OperationKey, if specified, holds the long running operation key for a given state. OSB uses this arbitrary value to reference specific back-end tasks it's performing.
                          type: string
                    bound:
                      description: OSBState contains information about a specific state.
                      type: object
                      properties:
                        operationKey:
                          description: OperationKey, if specified, holds the long running operation key for a given state. OSB uses this arbitrary value to reference specific back-end tasks it's performing.
                          type: string
                    unbindFailed:
                      description: OSBState contains information about a specific state.
                      type: object
                      properties:
                        operationKey:
                          description: OperationKey, if specified, holds the long running operation key for a given state. OSB uses this arbitrary value to reference specific back-end tasks it's performing.
                          type: string
                    unbinding:
                      description: OSBState contains information about a specific state.
                      type: object
                      properties:
                        operationKey:
                          description: OperationKey, if specified, holds the long running operation key for a given state. OSB uses this arbitrary value to reference specific back-end tasks it's performing.
                          type: string
                    unbound:
                      description: OSBState contains information about a specific state.
                      type: object
                      properties:
                        operationKey:
                          description: OperationKey, if specified, holds the long running operation key for a given state. OSB uses this arbitrary value to reference specific back-end tasks it's performing.
                          type: string
                planName:
                  description: PlanName contains the human-readable name of the plan
                  type: string
                routeServiceURL:
                  description: RouteServiceURL is an alias for the net/url parsing of the service URL.
                  type: object
                  properties:
                    ForceQuery:
                      type: boolean
                    Fragment:
                      type: string
                    Host:
                      type: string
                    Opaque:
                      type: string
                    Path:
                      type: string
                    RawFragment:
                      type: string
                    RawPath:
                      type: string
                    RawQuery:
                      type: string
                    Scheme:
                      type: string
                tags:
                  description: Tags contains a list of tags to apply to the service when injecting via VCAP_SERVICES. The JSON encoding of tags in VCAP_SERVICES in Cloud Foundry is [] rather than null, which is why the Tags field is not omitempty.
                  type: array
                  items:
                    type: string
                volumeStatus:
                  description: VolumeStatus contains information about the k8s Volume objects
                  type: object
                  required:
                    - mount
                  properties:
                    GID:
                      description: GID if specified will change the group of the mounted directory to GID.
                      type: string
                      nullable: true
                    UID:
                      description: UID if specified will change the owner of the mounted directory to UID.
                      type: string
                      nullable: true
                    claimName:
                      description: PersistentVolumeClaimName is the name of the binded PersistentVolumeClaim.
                      type: string
                    mount:
                      description: Mount is the path to mount the NFS share.
                      type: string
                    readonly:
                      description: ReadOnly indicates whether the mounted share is readonly.
                      type: boolean
                    volumeName:
                      description: PersistentVolumeName is the name of the binded PersistentVolume.
                      type: string
      additionalPrinterColumns:
        - name: App
          type: string
          jsonPath: .spec.app.name
        - name: Service
          type: string
          jsonPath: .spec.instanceRef.name
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
        - name: Ready
          type: string
          jsonPath: .status.conditions[?(@.type=="Ready")].status
