# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: ConfigMap
metadata:
  ##########################
  #                        #
  #   EXAMPLE CONFIG MAP   #
  #                        #
  ##########################
  # This ConfigMap serves only as an example. It is named with the "-example"
  # suffix so that we don't accidently stomp on ourselves with something like
  # `ko apply`.
  #
  # Enable Workload Identity (WI) by setting googleServiceAccount to a Google
  # Service Account. If left empty, then WI is disabled and a
  # 'build.imagePushSecrets' is required. More information about WI can be
  # found here:
  # https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity
  #
  # If you are using GKE and want to manually setup a secret do the following:
  # kubectl -nkf create secret docker-registry knative-build-key \
  #   --docker-username=_json_key \
  #   --docker-server https://gcr.io \
  #   --docker-password="$(cat /path/to/key.json)"
  annotations:
    operator.knative.dev/mode: Reconcile
  labels:
    kf.dev/release: VERSION_PLACEHOLDER
  name: config-secrets-example
  namespace: kf
data:
  wi.googleServiceAccount: "some-gsa"
  wi.googleProjectID: "" # Empty implies that the metadata server should be used
  build.imagePushSecrets: "knative-build-key"
