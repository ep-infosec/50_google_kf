// Code generated by MockGen. DO NOT EDIT.
// Source: api.go

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	unstructured "k8s.io/apimachinery/pkg/apis/meta/v1/unstructured"
)

// MockResourceReconciler is a mock of ResourceReconciler interface.
type MockResourceReconciler struct {
	ctrl     *gomock.Controller
	recorder *MockResourceReconcilerMockRecorder
}

// MockResourceReconcilerMockRecorder is the mock recorder for MockResourceReconciler.
type MockResourceReconcilerMockRecorder struct {
	mock *MockResourceReconciler
}

// NewMockResourceReconciler creates a new mock instance.
func NewMockResourceReconciler(ctrl *gomock.Controller) *MockResourceReconciler {
	mock := &MockResourceReconciler{ctrl: ctrl}
	mock.recorder = &MockResourceReconcilerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockResourceReconciler) EXPECT() *MockResourceReconcilerMockRecorder {
	return m.recorder
}

// Apply mocks base method.
func (m *MockResourceReconciler) Apply(arg0 context.Context, arg1 []unstructured.Unstructured) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Apply", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Apply indicates an expected call of Apply.
func (mr *MockResourceReconcilerMockRecorder) Apply(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Apply", reflect.TypeOf((*MockResourceReconciler)(nil).Apply), arg0, arg1)
}

// GetState mocks base method.
func (m *MockResourceReconciler) GetState(arg0 context.Context, arg1 []unstructured.Unstructured) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetState", arg0, arg1)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetState indicates an expected call of GetState.
func (mr *MockResourceReconcilerMockRecorder) GetState(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetState", reflect.TypeOf((*MockResourceReconciler)(nil).GetState), arg0, arg1)
}
